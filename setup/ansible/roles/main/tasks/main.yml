---

#
# System
#

- name: Install Common Packages
  apt:
    name:
      - apt-transport-https
      - ca-certificates
      - curl
      - dnsutils
      - git
      - gnupg2
      - htop
      - iperf3
      - iputils-ping
      - jq
      - less
      - neofetch
      - net-tools
      - nfs-common
      - nmap
      - psmisc
      - python3
      - python3-pip
      - rsync
      - software-properties-common
      - sqlite3
      - tcpdump
      - traceroute
      - tree
      - unattended-upgrades
      - unzip
      - wget
      - zip
    install_recommends: no
    update_cache: yes
    # Need the force_apt_get until
    # https://github.com/ansible/ansible/issues/56832
    force_apt_get: yes
  register: apt_install_common
  retries: 5
  until: apt_install_common is success

#
# User
#

- name: Remove motd
  command: update-rc.d motd remove

- name: Quite the login prompt
  file:
    dest: "/home/{{ ansible_user }}/.hushlogin"
    state: touch
    group: "{{ ansible_user }}"
    owner: "{{ ansible_user }}"
    mode: 0775

- name: Create config directory
  file:
    path: "/home/{{ ansible_user }}/.config"
    state: directory
    recurse: yes
    group: "{{ ansible_user }}"
    owner: "{{ ansible_user }}"
    mode: 0775

- name: Create neofetch directory
  file:
    path: "/home/{{ ansible_user }}/.config/neofetch"
    state: directory
    recurse: yes
    group: "{{ ansible_user }}"
    owner: "{{ ansible_user }}"
    mode: 0775

- name: Add custom neofetch config
  template:
    src: "templates/neofetch.conf.j2"
    dest: "/home/{{ ansible_user }}/.config/neofetch/config.conf"
    group: "{{ ansible_user }}"
    owner: "{{ ansible_user }}"
    mode: 0775

- name: Add small neofetch raspberry pi logo
  template:
    src: "templates/rpi-small.j2"
    dest: "/home/{{ ansible_user }}/.config/neofetch/rpi-small"
    group: "{{ ansible_user }}"
    owner: "{{ ansible_user }}"
    mode: 0775

- name: Enable neofetch on login
  copy:
    content: "neofetch --source /home/{{ ansible_user }}/.config/neofetch/rpi-small"
    dest: "/home/{{ ansible_user }}/.bash_profile"
    group: "{{ ansible_user }}"
    owner: "{{ ansible_user }}"
    mode: 0775

#
# Filesystem
#

# - name: Create a ext4 filesystem on /dev/sda
#   filesystem:
#     fstype: ext4
#     dev: /dev/sda

# - name: Create Data Directory
#   file:
#     path: /data
#     state: directory

# - name: Create Docker Data Directory
#   file:
#     path: /data/docker
#     state: directory

# - name: Create k3s Data Directory
#   file:
#     path: /data/k3s
#     state: directory

# - name: Create Local Volume Data Directory
#   file:
#     path: /data/app
#     state: directory

# - name: Mount Data Directory
#   mount:
#     path: /data
#     src: /dev/sda
#     fstype: ext4
#     opts: rw,defaults
#     state: present

#
# Docker
#

# - name: Add Docker configuration file
#   template:
#     src: daemon.json.j2
#     dest: /etc/docker/daemon.json

# - name: Replace single quotes with double quotes in daemon.json
#   replace:
#     path: /etc/docker/daemon.json
#     regexp: "'"
#     replace: "\""

# k3s uses Containerd
- name: Disable Docker
  systemd:
    name: docker
    enabled: no

#
# unattended-upgrades
#

- name: Copy unattended-upgrades configuration files in place
  template:
    src: "templates/{{ item }}.j2"
    dest: "/etc/apt/apt.conf.d/{{ item }}"
    owner: root
    group: root
    mode: 0644
  with_items:
    - 10periodic
    - 50unattended-upgrades

#
# log2ram
#

- name: Stop log2ram
  systemd:
    name: log2ram
    state: stopped
  ignore_errors: yes

- name: Cloning log2ram from GitHub
  git:
    repo: https://github.com/azlux/log2ram.git
    dest: /opt/log2ram
    version: "{{log2ram_version}}"

- name: Changing perms of "/opt/log2ram/install.sh"
  file: 
    dest: /opt/log2ram/install.sh
    mode: a+x

- name: Install log2ram
  command: /bin/sh ./install.sh
  args:
    chdir: "/opt/log2ram"

- name: Copy log2ram.conf
  template:
    src: log2ram.conf.j2
    dest: /etc/log2ram.conf